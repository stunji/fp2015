(define (product-digits n)
  (if (< (quotient n 10) 1)
      n
      (* (remainder n 10) (product-digits (quotient n 10)))))

(define (square x)
  (* x x))

(define (p a b c)
  (/ (+ a b c) 2))
  
(define (circle? circle-x circle-y radius point-x point-y)
  (<= (+ (square (- point-x circle-x)) (square (- point-y circle-y))) (square radius)))
 
(define (area a b c)
  (sqrt (* (p a b c) (- (p a b c) a) (- (p a b c) b) (- (p a b c) c))))

(define (prime? p)
  (define (non-divisible-by n d)
    (cond
     ((= d 1) #t)
     (else (if(= (remainder n d) 0)
          #f
          (non-divisible-by n (- d 1))))))
  (if (= p 1)
      #f
      (non-divisible-by p (- p 1))))
